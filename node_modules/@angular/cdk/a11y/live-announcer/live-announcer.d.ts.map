{"version":3,"file":"live-announcer.d.ts","sources":["live-announcer.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { ContentObserver } from '@angular/cdk/observers';\r\nimport { ElementRef, NgZone, OnDestroy } from '@angular/core';\r\nimport { AriaLivePoliteness, LiveAnnouncerDefaultOptions } from './live-announcer-tokens';\r\nexport declare class LiveAnnouncer implements OnDestroy {\r\n    private _ngZone;\r\n    private _defaultOptions?;\r\n    private _liveElement;\r\n    private _document;\r\n    private _previousTimeout?;\r\n    constructor(elementToken: any, _ngZone: NgZone, _document: any, _defaultOptions?: LiveAnnouncerDefaultOptions | undefined);\r\n    /**\r\n     * Announces a message to screenreaders.\r\n     * @param message Message to be announced to the screenreader.\r\n     * @returns Promise that will be resolved when the message is added to the DOM.\r\n     */\r\n    announce(message: string): Promise<void>;\r\n    /**\r\n     * Announces a message to screenreaders.\r\n     * @param message Message to be announced to the screenreader.\r\n     * @param politeness The politeness of the announcer element.\r\n     * @returns Promise that will be resolved when the message is added to the DOM.\r\n     */\r\n    announce(message: string, politeness?: AriaLivePoliteness): Promise<void>;\r\n    /**\r\n     * Announces a message to screenreaders.\r\n     * @param message Message to be announced to the screenreader.\r\n     * @param duration Time in milliseconds after which to clear out the announcer element. Note\r\n     *   that this takes effect after the message has been added to the DOM, which can be up to\r\n     *   100ms after `announce` has been called.\r\n     * @returns Promise that will be resolved when the message is added to the DOM.\r\n     */\r\n    announce(message: string, duration?: number): Promise<void>;\r\n    /**\r\n     * Announces a message to screenreaders.\r\n     * @param message Message to be announced to the screenreader.\r\n     * @param politeness The politeness of the announcer element.\r\n     * @param duration Time in milliseconds after which to clear out the announcer element. Note\r\n     *   that this takes effect after the message has been added to the DOM, which can be up to\r\n     *   100ms after `announce` has been called.\r\n     * @returns Promise that will be resolved when the message is added to the DOM.\r\n     */\r\n    announce(message: string, politeness?: AriaLivePoliteness, duration?: number): Promise<void>;\r\n    /**\r\n     * Clears the current text from the announcer element. Can be used to prevent\r\n     * screen readers from reading the text out again while the user is going\r\n     * through the page landmarks.\r\n     */\r\n    clear(): void;\r\n    ngOnDestroy(): void;\r\n    private _createLiveElement;\r\n}\r\n/**\r\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\r\n * with a wider range of browsers and screen readers.\r\n */\r\nexport declare class CdkAriaLive implements OnDestroy {\r\n    private _elementRef;\r\n    private _liveAnnouncer;\r\n    private _contentObserver;\r\n    private _ngZone;\r\n    /** The aria-live politeness level to use when announcing messages. */\r\n    get politeness(): AriaLivePoliteness;\r\n    set politeness(value: AriaLivePoliteness);\r\n    private _politeness;\r\n    private _previousAnnouncedText?;\r\n    private _subscription;\r\n    constructor(_elementRef: ElementRef, _liveAnnouncer: LiveAnnouncer, _contentObserver: ContentObserver, _ngZone: NgZone);\r\n    ngOnDestroy(): void;\r\n}\r\n"]}