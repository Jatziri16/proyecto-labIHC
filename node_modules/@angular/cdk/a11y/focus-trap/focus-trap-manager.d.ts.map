{"version":3,"file":"focus-trap-manager.d.ts","sources":["focus-trap-manager.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * A FocusTrap managed by FocusTrapManager.\r\n * Implemented by ConfigurableFocusTrap to avoid circular dependency.\r\n */\r\nexport interface ManagedFocusTrap {\r\n    _enable(): void;\r\n    _disable(): void;\r\n    focusInitialElementWhenReady(): Promise<boolean>;\r\n}\r\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\r\nexport declare class FocusTrapManager {\r\n    private _focusTrapStack;\r\n    /**\r\n     * Disables the FocusTrap at the top of the stack, and then pushes\r\n     * the new FocusTrap onto the stack.\r\n     */\r\n    register(focusTrap: ManagedFocusTrap): void;\r\n    /**\r\n     * Removes the FocusTrap from the stack, and activates the\r\n     * FocusTrap that is the new top of the stack.\r\n     */\r\n    deregister(focusTrap: ManagedFocusTrap): void;\r\n}\r\n"]}