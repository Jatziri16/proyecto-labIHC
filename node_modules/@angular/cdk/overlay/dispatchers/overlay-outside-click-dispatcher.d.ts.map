{"version":3,"file":"overlay-outside-click-dispatcher.d.ts","sources":["overlay-outside-click-dispatcher.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { OverlayReference } from '../overlay-reference';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { BaseOverlayDispatcher } from './base-overlay-dispatcher';\r\n/**\r\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\r\n * if any. It maintains a list of attached overlays to determine best suited overlay based\r\n * on event target and order of overlay opens.\r\n */\r\nexport declare class OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\r\n    private _platform;\r\n    private _cursorOriginalValue;\r\n    private _cursorStyleIsSet;\r\n    constructor(document: any, _platform: Platform);\r\n    /** Add a new overlay to the list of attached overlay refs. */\r\n    add(overlayRef: OverlayReference): void;\r\n    /** Detaches the global keyboard event listener. */\r\n    protected detach(): void;\r\n    /** Click event listener that will be attached to the body propagate phase. */\r\n    private _clickListener;\r\n}\r\n"]}