{"version":3,"file":"dir.d.ts","sources":["dir.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { EventEmitter, AfterContentInit, OnDestroy } from '@angular/core';\r\nimport { Direction, Directionality } from './directionality';\r\n/**\r\n * Directive to listen for changes of direction of part of the DOM.\r\n *\r\n * Provides itself as Directionality such that descendant directives only need to ever inject\r\n * Directionality to get the closest direction.\r\n */\r\nexport declare class Dir implements Directionality, AfterContentInit, OnDestroy {\r\n    /** Normalized direction that accounts for invalid/unsupported values. */\r\n    private _dir;\r\n    /** Whether the `value` has been set to its initial value. */\r\n    private _isInitialized;\r\n    /** Direction as passed in by the consumer. */\r\n    _rawDir: string;\r\n    /** Event emitted when the direction changes. */\r\n    change: EventEmitter<Direction>;\r\n    /** @docs-private */\r\n    get dir(): Direction;\r\n    set dir(value: Direction);\r\n    /** Current layout direction of the element. */\r\n    get value(): Direction;\r\n    /** Initialize once default value has been set. */\r\n    ngAfterContentInit(): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}