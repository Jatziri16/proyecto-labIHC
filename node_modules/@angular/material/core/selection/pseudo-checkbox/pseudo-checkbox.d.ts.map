{"version":3,"file":"pseudo-checkbox.d.ts","sources":["pseudo-checkbox.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Possible states for a pseudo checkbox.\r\n * @docs-private\r\n */\r\nexport declare type MatPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\r\n/**\r\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\r\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\r\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\r\n * Note that theming is meant to be handled by the parent element, e.g.\r\n * `mat-primary .mat-pseudo-checkbox`.\r\n *\r\n * Note that this component will be completely invisible to screen-reader users. This is *not*\r\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\r\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\r\n * of more complex components that appropriately handle selected / checked state.\r\n * @docs-private\r\n */\r\nexport declare class MatPseudoCheckbox {\r\n    _animationMode?: string | undefined;\r\n    /** Display state of the checkbox. */\r\n    state: MatPseudoCheckboxState;\r\n    /** Whether the checkbox is disabled. */\r\n    disabled: boolean;\r\n    constructor(_animationMode?: string | undefined);\r\n}\r\n"]}